# Basic Tuple Operations:
# Create a tuple with 5 elements and access the second and fourth element.
# Can you modify an element of a tuple? If not, explain why and demonstrate it with code.
# Convert a list to a tuple.
# How do you find the length of a tuple?
# Unpack a tuple into individual variables (e.g., a, b, c = (1, 2, 3)).
# Tuple Methods and Functions:
# Given a tuple t = (1, 2, 3, 2, 4, 2), count how many times the number 2 appears in the tuple.
# Find the index of an element in a tuple (e.g., find the index of 3 in (1, 2, 3, 4)).
# Create a tuple with nested tuples and access an element inside the nested tuple.
# Given a tuple t = ('a', 'b', 'c', 'd'), convert it into a list.
# Check if an element exists in a tuple (e.g., check if 5 is in the tuple (1, 2, 3, 4)).
# Tuple Slicing and Indexing:
# Slice a tuple to get the first three elements.
# Given a tuple of numbers, reverse the tuple without using any built-in methods.
# Create a tuple of numbers and use slicing to extract a subset of the tuple from index 2 to 5.
# Access the last two elements of a tuple using negative indexing.
# Concatenate two tuples (1, 2, 3) and (4, 5, 6) into a single tuple.
# Tuple and Functions:
# Write a function that takes a tuple as input and returns the sum of all the elements in the tuple.
# Write a function that takes two tuples and returns a new tuple with elements that are common in both tuples.
# Write a function that accepts a tuple of numbers and returns a tuple with the squares of each number.
# Create a function that takes a tuple and returns a new tuple with all the duplicate values removed.
# Write a function that returns the maximum and minimum values from a tuple of numbers.
# Advanced Tuple Manipulation:
# Given a tuple of strings, sort the tuple alphabetically and return it as a new tuple.
# Write a program that combines a tuple of names and a tuple of ages into a tuple of pairs (e.g., ('John', 25)).
# Given a tuple of tuples (e.g., ((1, 2), (3, 4), (5, 6))), write a program to flatten it into a single tuple (1, 2, 3, 4, 5, 6).
# Write a program that zips two tuples together and prints each pair.
# Given a tuple (1, 2, (3, 4), 5), write a program to access the element 4 inside the nested tuple.
# Tuple Problem-Solving:
# Write a Python program that returns a new tuple with the elements in reverse order.
# Write a program that converts a tuple of characters ('a', 'b', 'c', 'd') into a single string 'abcd'.
# Given a tuple of mixed types, write a function that returns two separate tuples: one with all numbers and another with all non-numbers.
# Write a Python program that finds the largest and smallest numbers in a tuple of numbers.
# Given a tuple of dates (e.g., ("2023-09-01", "2024-01-01", "2023-12-31")), write a program to sort the tuple by date.